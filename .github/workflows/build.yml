name: Build and test
on: [push, pull_request]
env:
  IOS_SIMULATOR: "iPhone 16"
  IOS_VERSION: "18.0"
jobs:
  build:
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v2
    - name: "Lint"
      run: make lint
    - name: "Run tests (PACKAGE_MANAGER_COMMAND: test)"
      env:
        PACKAGE_MANAGER_COMMAND: test -Xswiftc -warnings-as-errors
      run: ./run-tests.sh
    - name: "Run tests (SPM integration test)"
      env:
        SPM: run
      run: ./run-tests.sh
    - name: "Run tests (BUILD_SCHEME: SQLite iOS)"
      env:
        BUILD_SCHEME: SQLite iOS
      run: ./run-tests.sh
    - name: "Run tests (BUILD_SCHEME: SQLite Mac)"
      env:
        BUILD_SCHEME: SQLite Mac
      run: ./run-tests.sh
    - name: "Run tests (VALIDATOR_SUBSPEC: none)"
      env:
        VALIDATOR_SUBSPEC: none
      run: ./run-tests.sh
    - name: "Run tests (VALIDATOR_SUBSPEC: standard)"
      env:
        VALIDATOR_SUBSPEC: standard
      run: ./run-tests.sh
    - name: "Run tests (VALIDATOR_SUBSPEC: standalone)"
      env:
        VALIDATOR_SUBSPEC: standalone
      run: ./run-tests.sh
    - name: "Run tests (VALIDATOR_SUBSPEC: SQLCipher)"
      env:
        VALIDATOR_SUBSPEC: SQLCipher
      run: ./run-tests.sh
    - name: "Run tests (CARTHAGE_PLATFORM: iOS)"
      env:
        CARTHAGE_PLATFORM: iOS
      run: ./run-tests.sh
    - name: "Run tests (CARTHAGE_PLATFORM: Mac)"
      env:
        CARTHAGE_PLATFORM: Mac
      run: ./run-tests.sh
    - name: "Run tests (CARTHAGE_PLATFORM: watchOS)"
      env:
        CARTHAGE_PLATFORM: watchOS
      run: ./run-tests.sh
    - name: "Run tests (CARTHAGE_PLATFORM: tvOS)"
      env:
        CARTHAGE_PLATFORM: tvOS
      run: ./run-tests.sh
    - name: "Run tests (CARTHAGE_PLATFORM: visionOS)"
      env:
        CARTHAGE_PLATFORM: visionOS
      run: ./run-tests.sh
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y libsqlite3-dev
    - name: Test
      run: swift test
    - name: "Run tests (SPM integration test)"
      env:
        SPM: run
      run: ./run-tests.sh
  android:
      name: Android
      strategy:
        fail-fast: false
        matrix:
          swift: ['6.1', 'nightly-6.2']
          arch: ["aarch64", "x86_64"]
      runs-on: macos-15
      timeout-minutes: 30
      steps:
        - uses: actions/checkout@v4
        - name: "Build Swift Package for Android"
          run: |
              brew install skiptools/skip/skip || (brew update && brew install skiptools/skip/skip)
              skip android sdk install --version ${{ matrix.swift }}
              ANDROID_NDK_ROOT="" skip android build --arch ${{ matrix.arch }}